<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magento.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magento.com for more information.
 *
 * @category    design
 * @package     rwd_default
 * @copyright   Copyright (c) 2006-2016 X.commerce, Inc. and affiliates (http://www.magento.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
/**
 * Product view template
 *
 * @see Mage_Catalog_Block_Product_View
 * @see Mage_Review_Block_Product_View
 */
?>
<script type="text/javascript">
    //<![CDATA[
    jQuery(function () {
        var menu_ul = jQuery('.menu_drop > li > ul'),
                menu_a = jQuery('.menu_drop > li > a');

        menu_ul.hide();

        menu_a.click(function (e) {
            e.preventDefault();
            if (!jQuery(this).hasClass('active')) {
                menu_a.removeClass('active');
                menu_ul.filter(':visible').slideUp('normal');
                jQuery(this).addClass('active').next().stop(true, true).slideDown('normal');
            } else {
                jQuery(this).removeClass('active');
                jQuery(this).next().stop(true, true).slideUp('normal');
            }
        });

    });
    //]]>
</script>
<?php $_helper = $this->helper('catalog/output'); ?>
<?php $_product = $this->getProduct(); ?>
<script type="text/javascript">
    var optionsPrice = new Product.OptionsPrice(<?php echo $this->getJsonConfig() ?>);
</script>
<div class="single_top">
    <div class="container">
        <div class="single_grid">
            <form action="<?php echo $this->getSubmitUrl($_product, array('_secure' => $this->_isSecure())) ?>" method="post" id="product_addtocart_form"<?php if ($_product->getOptions()): ?>enctype="multipart/form-data"<?php endif; ?>>
                <?php echo $this->getBlockHtml('formkey') ?>
                    <?php echo $this->getChildHtml('media') ?>
                <div class="desc1 span_3_of_2">
                    <ul class="back">
                        <li><i class="back_arrow"></i>Back to </li>
                    </ul>
                    <h1><?php echo $this->__($_product->getName()); ?></h1>
                    <?php if ($_product->getShortDescription()): ?>
                        <p><?php echo $_helper->productAttribute($_product, nl2br($_product->getShortDescription()), 'short_description') ?></p>
                    <?php endif; ?>
                    <?php echo $this->getChildChildHtml('container1', '', true, true) ?>
                </div>
            </form>
            <div class="clearfix"></div>
        </div>
        <div class="single_social_top">   
            <ul class="single_social">
                <li><a href="#"> <i class="s_fb"> </i> <div class="social_desc">Share<br> on facebook</div><div class="clearfix"> </div></a></li>
                <li><a href="#"> <i class="s_twt"> </i> <div class="social_desc">Tweet<br> this product</div><div class="clearfix"> </div></a></li>
                <li><a href="#"> <i class="s_google"> </i><div class="social_desc">Google+<br> this product</div><div class="clearfix"> </div></a></li>
                <li class="last"><a href="#"> <i class="s_email"> </i><div class="social_desc">Email<br> a Friend</div><div class="clearfix"> </div></a></li>
            </ul>
        </div>
        <ul class="menu_drop">
            <li class="item1"><a href="#" class=""><img src="<?php echo $this->getSkinUrl('images/buyshop/product_arrow.png') ?>">Description</a>
                <ul style="display: none;">
                    <li class="subitem1"><a href="#"><?php echo $_product->getDescription() ?></a></li>
                </ul>
            </li>
            <li class="item2"><a href="#" class=""><img src="<?php echo $this->getSkinUrl('images/buyshop/product_arrow.png') ?>">Additional information</a>
                <ul style="display: none;">
                  
                </ul>
            </li>
            <li class="item3"><a href="#" class=""><img src="<?php echo $this->getSkinUrl('images/buyshop/product_arrow.png') ?>">Add Reviews</a>
                <ul style="display: none;">
                    <?php echo $this->getChildHtml('reviews') ?>
                </ul>
            </li>
        </ul>
    </div>
    <?php echo $this->getChildHtml('related_products') ?>
</div>

<script type="text/javascript">
    //<![CDATA[
    var productAddToCartForm = new VarienForm('product_addtocart_form');
    productAddToCartForm.submit = function (button, url) {
        if (this.validator.validate()) {
            var form = this.form;
            var oldUrl = form.action;
            if (url) {
                form.action = url;
            }
            var e = null;
            try {
                this.form.submit();
            } catch (e) {
            }
            this.form.action = oldUrl;
            if (e) {
                throw e;
            }

            if (button && button != 'undefined') {
                button.disabled = true;
            }
        }
    }.bind(productAddToCartForm);
    productAddToCartForm.submitLight = function (button, url) {
        if (this.validator) {
            var nv = Validation.methods;
            delete Validation.methods['required-entry'];
            delete Validation.methods['validate-one-required'];
            delete Validation.methods['validate-one-required-by-name'];
            // Remove custom datetime validators
            for (var methodName in Validation.methods) {
                if (methodName.match(/^validate-datetime-.*/i)) {
                    delete Validation.methods[methodName];
                }
            }

            if (this.validator.validate()) {
                if (url) {
                    this.form.action = url;
                }
                this.form.submit();
            }
            Object.extend(Validation.methods, nv);
        }
    }.bind(productAddToCartForm);
    //]]>
</script>
</div>
